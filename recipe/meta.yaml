{% set name = "dartsim" %}
{% set version = "6.15.0" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/dartsim/dart/archive/v{{ version }}.tar.gz
    sha256: bbf954e283f464f6d0a8a5ab43ce92fd49ced357ccdd986c7cb4c29152df8692

build:
  number: 1

outputs:
  - name: dartsim-cpp
    script: build_cpp.sh  # [unix]
    script: bld_cpp.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage('dartsim-cpp', max_pin='x.x') }}
      ignore_run_exports:
        - console_bridge
        - spdlog
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ cdt('mesa-libgl-devel') }}  # [linux64]
        - {{ cdt('mesa-libglu-devel') }}  # [linux64]
        - {{ stdlib('c') }}
        - cmake
        - doxygen
        - make                   # [not win]
        - ninja                  # [win]
        - perl                   # [win]
        - pkg-config
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
      host:
        - assimp
        - bullet-cpp
        - console_bridge
        - eigen
        - fcl
        - fmt
        - freeglut  # [not osx]
        - imgui
        - ipopt
        - libboost-devel
        - libode
        - nlopt
        - octomap
        - openscenegraph
        - pagmo
        - pagmo-devel
        - tinyxml2
        - urdfdom
        - spdlog
      run:
        - eigen
        - octomap
    test:
      commands:
        - test -f $PREFIX/lib/libdart.dylib  # [osx]
        - test -f $PREFIX/lib/libdart.so  # [linux]
        - test -f $PREFIX/share/dart/cmake/dart_collision-odeTargets.cmake  # [not win]
        - test -f $PREFIX/share/dart/cmake/dart_collision-bulletTargets.cmake  # [not win]
        - if not exist %LIBRARY_LIB%\\dart.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\share\\dart\\cmake\\dart_collision-odeTargets.cmake exit 1  # [win]
        - if not exist %PREFIX%\\Library\\share\\dart\\cmake\\dart_collision-bulletTargets.cmake exit 1  # [win]
      downstreams:
        - gz-physics8

  - name: dartpy
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    build:
      skip: true  # [linux and not x86_64]
      skip: true  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('mesa-libgl-devel') }}  # [linux64]
        - {{ cdt('mesa-libglu-devel') }}  # [linux64]
        - {{ cdt('libselinux') }}  # [linux]
        - {{ cdt('libxdamage') }}  # [linux]
        - {{ cdt('libxext') }}     # [linux]
        - {{ cdt('libxxf86vm') }}  # [linux]        
        - {{ stdlib('c') }}
        - cmake
        - doxygen
        - make                   # [not win]
        - ninja                  # [win]
        - perl                   # [win]
        - pkg-config
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
        - numpy                               # [build_platform != target_platform]
        - python                              # [build_platform != target_platform]
      host:
        - {{ pin_subpackage('dartsim-cpp', exact=True) }}
        # C++ deps
        - assimp
        - bullet-cpp
        - fcl
        - libgl  # [linux]
        - libode
        - nlopt
        - octomap
        - openscenegraph
        - tinyxml2
        - urdfdom
        - numpy
        - xorg-libxfixes  # [linux]
        # Python deps
        - pip
        - python
        - requests
        - setuptools
      run:
        - {{ cdt('mesa-libgl-devel') }}   # [linux64]
        - {{ cdt('mesa-libglu-devel') }}  # [linux64]
        - {{ cdt('mesa-dri-drivers') }}   # [linux]
        - {{ pin_subpackage('dartsim-cpp', exact=True) }}
        - libgl   # [linux]
        - libglu  # [linux]
        - numpy
        - python
    test:
      imports:
        - dartpy

  - name: dartsim
    build:
      run_exports:
        - {{ pin_subpackage('dartsim-cpp', max_pin='x.x') }}
    requirements:
      run:
        - {{ pin_subpackage('dartsim-cpp', exact=True) }}
        - {{ pin_subpackage('dartpy', exact=True) }}  # [linux and x86_64]
        - {{ pin_subpackage('dartpy', exact=True) }}  # [osx]
        - python
        - numpy
    test:
      imports:
        - dartpy  # [linux and x86_64]
        - dartpy  # [osx]
      commands:
        - test -f $PREFIX/lib/libdart.dylib  # [osx]
        - test -f $PREFIX/lib/libdart.so  # [linux]
        - test -f $PREFIX/share/dart/cmake/dart_collision-odeTargets.cmake  # [not win]
        - test -f $PREFIX/share/dart/cmake/dart_collision-bulletTargets.cmake  # [not win]
        - if not exist %LIBRARY_LIB%\\dart.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\share\\dart\\cmake\\dart_collision-odeTargets.cmake exit 1  # [win]
        - if not exist %PREFIX%\\Library\\share\\dart\\cmake\\dart_collision-bulletTargets.cmake exit 1  # [win]

about:
  home: http://dartsim.github.io/
  license: BSD-2-Clause
  license_file: LICENSE
  summary: The DART (Dynamic Animation and Robotics Toolkit) library provides data structures and algorithms for kinematic and dynamic applications in robotics and computer animation.
  description: The DART (Dynamic Animation and Robotics Toolkit) library provides data structures and algorithms for kinematic and dynamic applications in robotics and computer animation.
  dev_url: https://github.com/dartsim/dart

extra:
  recipe-maintainers:
    - jslee02
    - traversaro
    - wolfv
